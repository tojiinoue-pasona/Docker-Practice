# Laravel用Nginx設定
# これはNginxがどのようにリクエストを処理するかを定義する設定ファイル

server {
    # ポート80でHTTPリクエストを受け付ける
    # お客さんはhttp://localhost:8000でアクセス
    listen 80;
    
    # サーバー名（今回はlocalhostでテスト）
    server_name localhost;
    
    # Laravelのpublic/フォルダをWebルートに設定
    # なぜpublic/？ → Laravelのセキュリティのため、public/以外は直接アクセス禁止
    root /var/www/html/public;
    
    # デフォルトファイル（index.phpを最優先）
    index index.php index.html;
    
    # 文字エンコーディング（日本語対応）
    charset utf-8;
    
    # ログ設定（デバッグ用）
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # メインのリクエスト処理ルール
    location / {
        # Laravelのルーティング処理
        # try_files の説明：
        # 1. $uri → 実際のファイルが存在するかチェック（例：style.css）
        # 2. $uri/ → ディレクトリが存在するかチェック
        # 3. /index.php?$query_string → 上記がなければLaravelルーターに渡す
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # PHPファイルの処理（最重要部分！）
    location ~ \.php$ {
        # セキュリティ：存在しないPHPファイルへのアクセスを拒否
        try_files $uri =404;
        
        # FastCGI設定（NginxとPHP-FPMの橋渡し）
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        
        # 重要：PHP-FPMコンテナとの通信設定
        # 'php' はdocker-compose.ymlで定義するサービス名
        # ':9000' はPHP-FPMが待機しているポート
        fastcgi_pass php:9000;
        
        # FastCGIのデフォルトファイル
        fastcgi_index index.php;
        
        # PHP-FPMに渡すパラメータ設定
        include fastcgi_params;
        
        # SCRIPT_FILENAMEパラメータ（PHP実行に必須）
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
    
    # 静的ファイル（CSS、JS、画像）の処理
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
        # キャッシュ設定（パフォーマンス向上）
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # ファイルが見つからない場合のログを無効化
        log_not_found off;
    }
    
    # セキュリティ：重要なファイルへの直接アクセスを禁止
    location ~ /\. {
        deny all;
    }
    
    # Laravel設定ファイルへの直接アクセスを禁止
    location ~ ^/(\.env|composer\.(json|lock)|package\.json)$ {
        deny all;
    }
}
